{
  "info": {
    "name": "User Management API - RBAC Complete",
    "description": "API đầy đủ cho Hệ thống Quản lý Người dùng với JWT Authentication, RBAC (Role-Based Access Control), Refresh Token, Avatar Upload, Password Reset, Activity Logs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"user@test.com\",\n  \"password\": \"123456\",\n  \"role\": \"user\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Đăng ký tài khoản mới. Role có thể là: user, admin, moderator"
          }
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@test.com\",\n  \"password\": \"123456\",\n  \"role\": \"admin\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Đăng ký tài khoản admin để test RBAC"
          }
        },
        {
          "name": "Register Moderator",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Moderator User\",\n  \"email\": \"moderator@test.com\",\n  \"password\": \"123456\",\n  \"role\": \"moderator\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Đăng ký tài khoản moderator để test RBAC"
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"accessToken\", jsonData.accessToken);",
                  "pm.collectionVariables.set(\"refreshToken\", jsonData.refreshToken);",
                  "pm.collectionVariables.set(\"userId\", jsonData.user.id || jsonData.user._id);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has accessToken\", function () {",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "});",
                  "",
                  "pm.test(\"Response has refreshToken\", function () {",
                  "    pm.expect(jsonData.refreshToken).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Đăng nhập và nhận accessToken + refreshToken"
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"accessToken\", jsonData.accessToken);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has new accessToken\", function () {",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Làm mới access token khi hết hạn"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Đăng xuất - thu hồi refresh token"
          }
        },
        {
          "name": "Logout All Devices",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout-all"]
            },
            "description": "Đăng xuất khỏi tất cả thiết bị - xóa tất cả refresh tokens"
          }
        }
      ]
    },
    {
      "name": "2. Profile (User)",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "Xem thông tin profile của chính mình (Cần đăng nhập)"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@test.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "Cập nhật thông tin profile"
          }
        }
      ]
    },
    {
      "name": "3. Admin - User Management (RBAC)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            },
            "description": "📌 CHỈ ADMIN - Lấy danh sách tất cả users\n\nTest phân quyền:\n- Login với admin → 200 OK ✅\n- Login với user → 403 Forbidden ❌"
          }
        },
        {
          "name": "Get User By ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}"]
            },
            "description": "📌 CHỈ ADMIN - Xem thông tin chi tiết của user"
          }
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated User Name\",\n  \"email\": \"updated@test.com\",\n  \"role\": \"moderator\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}"]
            },
            "description": "📌 CHỈ ADMIN - Cập nhật thông tin user (bao gồm cả role)"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}"]
            },
            "description": "📌 CHỈ ADMIN - Xóa user\n\nLưu ý:\n- Không thể xóa chính mình\n- Xóa user sẽ xóa tất cả refresh tokens của user đó"
          }
        },
        {
          "name": "Toggle User Active Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}/toggle-active",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}", "toggle-active"]
            },
            "description": "📌 CHỈ ADMIN - Kích hoạt/vô hiệu hóa user\n\nKhi vô hiệu hóa (isActive: false):\n- User không thể đăng nhập\n- Tất cả refresh tokens bị xóa\n- User bị logout khỏi tất cả thiết bị"
          }
        },
        {
          "name": "Get User Sessions",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}", "sessions"]
            },
            "description": "📌 CHỈ ADMIN - Xem tất cả sessions (refresh tokens) của user\n\nResponse:\n- totalSessions: Số lượng thiết bị đang đăng nhập\n- sessions: Danh sách refresh tokens với thông tin device"
          }
        },
        {
          "name": "Delete User Sessions",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{userId}}/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "{{userId}}", "sessions"]
            },
            "description": "📌 CHỈ ADMIN - Xóa tất cả sessions của user\n\nKết quả: User bị logout khỏi tất cả thiết bị"
          }
        }
      ]
    },
    {
      "name": "4. Moderator (RBAC)",
      "item": [
        {
          "name": "Get All Users (Read-only)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderator/users",
              "host": ["{{baseUrl}}"],
              "path": ["moderator", "users"]
            },
            "description": "📌 ADMIN + MODERATOR - Xem danh sách users (chỉ xem, không chỉnh sửa)\n\nTest phân quyền:\n- Login với admin → 200 OK ✅\n- Login với moderator → 200 OK ✅\n- Login với user → 403 Forbidden ❌"
          }
        },
        {
          "name": "Get User By ID (Read-only)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderator/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["moderator", "users", "{{userId}}"]
            },
            "description": "📌 ADMIN + MODERATOR - Xem chi tiết user (read-only)"
          }
        }
      ]
    },
    {
      "name": "5. Activity Logs (Admin Only)",
      "item": [
        {
          "name": "Get Logs (All)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["logs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "📌 CHỈ ADMIN - Xem tất cả activity logs với pagination"
          }
        },
        {
          "name": "Get Logs (Filter by User)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs?userId={{userId}}&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["logs"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "📌 CHỈ ADMIN - Lọc logs theo User ID"
          }
        },
        {
          "name": "Get Logs (Filter by Action)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs?action=login&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["logs"],
              "query": [
                {
                  "key": "action",
                  "value": "login"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "📌 CHỈ ADMIN - Lọc logs theo Action (login, logout, register, update, delete...)"
          }
        },
        {
          "name": "Delete Old Logs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"olderThan\": 30\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/logs",
              "host": ["{{baseUrl}}"],
              "path": ["logs"]
            },
            "description": "📌 CHỈ ADMIN - Xóa logs cũ hơn N ngày"
          }
        }
      ]
    },
    {
      "name": "6. Test RBAC Scenarios",
      "item": [
        {
          "name": "❌ User calls Admin API (Should Fail)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            },
            "description": "❌ TEST FAIL CASE\n\n1. Login với user@test.com\n2. Gọi API này\n3. Expected: 403 Forbidden\n4. Message: \"Chỉ admin mới có quyền truy cập\""
          }
        },
        {
          "name": "✅ Admin calls Admin API (Should Success)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            },
            "description": "✅ TEST SUCCESS CASE\n\n1. Login với admin@test.com\n2. Gọi API này\n3. Expected: 200 OK\n4. Response: [...danh sách users...]"
          }
        },
        {
          "name": "✅ Moderator calls Moderator API (Should Success)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/moderator/users",
              "host": ["{{baseUrl}}"],
              "path": ["moderator", "users"]
            },
            "description": "✅ TEST SUCCESS CASE\n\n1. Login với moderator@test.com\n2. Gọi API này\n3. Expected: 200 OK\n4. Response: [...danh sách users...] (read-only)"
          }
        },
        {
          "name": "❌ Moderator calls Admin API (Should Fail)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            },
            "description": "❌ TEST FAIL CASE\n\n1. Login với moderator@test.com\n2. Gọi API này\n3. Expected: 403 Forbidden\n4. Message: \"Chỉ admin mới có quyền truy cập\""
          }
        },
        {
          "name": "❌ No Token (Should Fail)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            },
            "description": "❌ TEST UNAUTHORIZED CASE\n\n1. Không gửi token\n2. Gọi API này\n3. Expected: 401 Unauthorized\n4. Message: \"No token provided\""
          }
        }
      ]
    }
  ]
}
